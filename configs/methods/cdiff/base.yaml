trainer:
  metrics_on_train: True
  total_iters: 10_000_000 # may be it is too much...

evaluator:
  devices: ["cuda:0", "cuda:1"]


data_conf:
  train_resamples: 50
  batch_size: 1024
  train_random_end: time
  train_transforms:
    '1':
      TimeToDiff:
        disable: true #IMPORTANT: make sure it is consistent with VAE!
    "3":
      CutTargetSequence:
        #target_len: ${data_conf.generation_len}
        target_len: 32

# MODEL
model:
  name: CrossDiffusionModel
  params:
    history_len: 32
    #generation_len:  ${data_conf.generation_len}
    generation_len: 32
    diffusion_steps: 200
    emb_dim_features: 8
    dim: 32
    heads: 2
    feed_forward: 64
    encoder_layer: 2
    decoder_layer: 2
    # checkpoint: /trinity/home/j.chen/2.SeqDiff/test/transaction-generation-multi-features/log/generation/age/cdiff/seed_0/ckpt/epoch__0020_-_loss__-809.7.ckpt


optimizer:
  name: Adam
  params:
    lr: 1.e-3 # Note: I didn't adjust hyperparams&schedulers
    weight_decay: 1.e-9

schedulers:
  "step":
    StepLR: # Note: I didn't adjust hyperparams&schedulers
      step_size: 30


loss:
  name: DummyLoss


optuna:
  params:
    n_trials: 100
    n_startup_trials: 10
    request_list: []
    target_metric: ${trainer.ckpt_track_metric}
  suggestions:
    - ["optimizer.params.weight_decay", ["suggest_float", {low: 1.e-15, high: 1.e-2, log: True}]]
    - ["optimizer.params.lr", ["suggest_float", {low: 1.e-5, high: 0.1, log: True}]]

    - 
      - ["data_conf.train_transforms.1.TimeToDiff.disable", "data_conf.val_transforms.1.TimeToDiff.disable"]
      - ["suggest_categorical", {choices: [True, False]}]

    - ["model.params.diffusion_steps", ["suggest_categorical", {choices: [100, 200, 500, 700]}]]
    - ["model.params.emb_dim_features", ["suggest_categorical", {choices: [4, 8, 16, 32]}]]
    - ["model.params.dim", ["suggest_categorical", {choices: [4, 8, 16, 32, 64, 128]}]]
    - ["model.params.heads", ["suggest_categorical", {choices: [2, 4, 8, 16]}]]
    - ["model.params.feed_forward", ["suggest_categorical", {choices: [16, 32, 64, 128, 256]}]]
    - ["model.params.encoder_layer", ["suggest_categorical", {choices: [2, 4, 6, 8, 10, 12, 16]}]]
    - ["model.params.decoder_layer", ["suggest_categorical", {choices: [2, 4, 6, 8, 10, 12, 16]}]]
